<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OOPSconcepts</name>
    </assembly>
    <members>
        <member name="T:OOPSconcepts.AccountNumberGenerator">
            <summary>
            AccountNumberGenerator is a static Class that contains a single method to generate Sequential Account Numbers
            </summary>
            <example>
            <code>
            AccountNumberGenerator.getAccountNumber(); // 1_00_00_00_00_001
            AccountNumberGenerator.getAccountNumber(); // 1_00_00_00_00_002
            </code>
            </example>
            <remarks>Account Numbers are type ling and starting with value 1_00_00_00_00_000</remarks>
        </member>
        <member name="M:OOPSconcepts.AccountNumberGenerator.getAccountNumber">
            <summary>
            A static Method to generate Sequential Account Number with each call
            </summary>
            <code>
            AccountNumberGenerator.getAccountNumber(); // 1_00_00_00_00_001
            AccountNumberGenerator.getAccountNumber(); // 1_00_00_00_00_002
            </code>
            <returns> long type Account Number such as 1_00_00_00_00_002</returns>
        </member>
        <member name="T:OOPSconcepts.BankAccount">
            <summary>
            An Abstract Class to avail Basic Bank Account Properties such as
            <list type="bullet">
            <item>Account Holder Name</item>
            <item>Account Number</item>
            <item>Balance</item>
            </list>
            </summary>
        </member>
        <member name="T:OOPSconcepts.IBankAccount">
            <summary>
            Bank Account Interface to Enforce Basic Operations such as
            <list type="bullet">
            <item>Deposit Money</item>
            <item>Withdraw</item>
            <item>getBalance</item>
            </list>
            </summary>
        </member>
        <member name="T:OOPSconcepts.ISavingBankAccount">
            <summary>
            Savings Account Interface to Enable Saving Account Property Interest Rate
            Provides Mehthods such as
            <list type="bullet">
            <item>setInterestRate</item>
            <item>getInterestRate</item>
            </list>
            </summary>
            <remarks>Extends <see cref="T:OOPSconcepts.IBankAccount"/></remarks>
        </member>
        <member name="T:OOPSconcepts.ICurrentBankAccount">
            <summary>
            Current Account Interface to Enable Current Account Property Limit
            Methods are as follows
            <list type="bullet">
            <item>setLimit</item>
            <item>getLimit</item>
            </list>
            </summary>
            <remarks>Extends <see cref="T:OOPSconcepts.IBankAccount"/></remarks>
        </member>
        <member name="T:OOPSconcepts.CurrentBankAccount">
            <summary>
            Current Bank Account Class with Current Account Operations
            Implemets following Interface
            <list type="bullet">
            <item><see cref="T:OOPSconcepts.ICurrentBankAccount"/></item>
            <item><see cref="T:OOPSconcepts.IBankAccount"/></item>
            </list>
            Extends an absract class <see cref="T:OOPSconcepts.BankAccount"/>
            </summary>
        </member>
        <member name="M:OOPSconcepts.CurrentBankAccount.deposit(System.Single)">
            <summary>
            Method to deposit a amount to Current Bank Account
            </summary>
            <param name="amount"> Float Type amount to be deposited</param>
            <returns> Boolean representing Operations Success</returns>
        </member>
        <member name="M:OOPSconcepts.CurrentBankAccount.withdraw(System.Single)">
            <summary>
            Method to Withdraw amount from Current Account
            </summary>
            <param name="amount"> Floatr type amount to be withdrawn</param>
            <returns> Boolean Representing Operation Success</returns>
        </member>
        <member name="M:OOPSconcepts.CurrentBankAccount.getBalance">
            <summary>
            Method to Return Current Account Balance
            </summary>
            <returns> Float Type Balance</returns>
        </member>
        <member name="M:OOPSconcepts.CurrentBankAccount.setLimit(System.Single)">
            <summary>
            Method to set available Limit for a Current Account                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
            </summary>
            <param name="amount"></param>
            <returns> Returns a Boolean Value Representing Operation Success</returns>
        </member>
        <member name="M:OOPSconcepts.CurrentBankAccount.getLimit">
            <summary>
            Method to Retrieve the Current Limit
            </summary>
            <returns></returns>
        </member>
        <member name="T:OOPSconcepts.SavingBankAccount">
            <summary>
            Saving Bank Account Class with Current Account Operations
            Implemets following Interface
            <list type="bullet">
            <item><see cref="T:OOPSconcepts.ISavingBankAccount"/></item>
            <item><see cref="T:OOPSconcepts.IBankAccount"/></item>
            </list>
            Extends an absract class <see cref="T:OOPSconcepts.BankAccount"/>
            </summary>
        </member>
        <member name="M:OOPSconcepts.SavingBankAccount.deposit(System.Single)">
            <summary>
            Method To Perform Deposit Operation on a Savings Bank Account
            </summary>
            <param name="amount"> Float type amount to be  deposited</param>
            <returns>Return Boolean Success?</returns>
        </member>
        <member name="M:OOPSconcepts.SavingBankAccount.withdraw(System.Single)">
            <summary>
            Method to Perform Withdraw Operation on the Saving Account 
            </summary>
            <param name="amount">Float type Amount to be withdrawn</param>
            <returns>Returns Boolean Success?</returns>
        </member>
        <member name="M:OOPSconcepts.SavingBankAccount.getBalance">
            <summary>
            Method To Retrieve Saving Account Balance
            </summary>
            <returns> Return FLoat type Balance</returns>
        </member>
        <member name="M:OOPSconcepts.SavingBankAccount.setInterestRate(System.Single)">
            <summary>
            Method to set Interest Rate for an Saving Account
            </summary>
            <param name="rate"> Float type Rate percentage value</param>
            <returns>Returns Boolean Type Success?</returns>
        </member>
        <member name="M:OOPSconcepts.SavingBankAccount.getInterestRate">
            <summary>
            Method to Retrieve Interest Rate for an Saving Account
            </summary>
            <returns>Float type Interest Rate</returns>
        </member>
        <member name="T:OOPSconcepts.BankOperations">
            <summary>
            Main Class to Operate the Banking operations
            </summary>
        </member>
    </members>
</doc>
